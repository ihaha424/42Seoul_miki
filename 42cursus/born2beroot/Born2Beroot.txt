
🟪가상 머신의 작동방식과 주된 목적
가상머신은 물리적 컴퓨터와 동일한 기능을 제공하는 소프트웨어 컴퓨터이다. 가상머신은 물리적 컴퓨터와 비슷하게 애플리케이션과 운영체제를 실행합니다.
또한 주로 하이퍼 바이버를 통해서 사용된다. 하이퍼바이저는 가상 머신(Virtual Machine, VM)을 생성하고 구동하는 소프트웨어입니다.
주된 목적은 현제 내 컴퓨터의 환경과 다른 환경에서 작업을 하고 싶거나 보안적인 부분때문에 사용을 한다.

🟪Rocky와 Debian의 차이점
Rocky는 CentOS의 후속으로 기업에서 유료로 만들어서 초창기에 안정성이 좋아서 기업에서 많이 사용함. 또한 유지보수가 편리하고 여러 유틸들이 잘 제공되어 있음. 
데비안은 온라인 커뮤니티에서 만들어서 신뢰성이 부족함. 기업같은대선 잘 안쓰고, 이제 개인적으로 서버를 관리하거나 개인 공부용으로 씀. 또한 패키지 설치 및 업그레이드의 단순함이 있음.
둘다 오픈소스임 지금.

🟪 apt,aptitude 둘다 리눅스의 프로그램 설치 및 제거의 기능을 가진 패키지 매니저이다.
다만 aptitude는 GUI를 지원해 준다. 또한 의존성의 차이가 있고, 
설치,제거 중 충돌이 일어날 경우 apt는 그냥 종료 되지만 aptitude는 해결방법을 제시한다.

🟪APPArmor는 시스템 관리자가 프로그램 역량을 제한할 수 있게 해주는 리눅스 커널 보안 모둘이다.
크게 2가지 옵션으로 볼 수 있는데 하나는(enforce 모드) 허가되지 않은 파일에 접근하는 것을 거부 하는 모드이고,
다른 하나는(complain 모드) 실질적으로 보안을 제공하는 것은 아니나 다른 어플리케이션이 해야할 행동이 아닌 다른 행동을 하는 경우 로그를 남겨준다.(중지하진 않음)
MAC(강력접근통제)의 구현으로 DAC(임의적 접근 통제 방식)의 접근 제어를 보완한다.

🟪
그래픽->없음
비밀번호 -> 123QWEasdzxc(길이 10자 이상, 대문자, 숫자 포함, 같은 문자 최대 3번)
	-> sudo vim /etc/pam.d/common-password
	-> sudo vim /etc/login.defs
ufw service 가 실행되었는가 ? → sudo ufw status
ssh service 가 실행되었는가 ? → systemctl status ssh
os가 debian인가  → uname -a

🟪
그룹에 속해 있는지? -> id -Gn dongmiki
새로운 유저 만들기 sudo adduser <NEW_USER>
그룹 만들고 추가하기  -> sudo groupadd <GROUP_NAME>  -> sudo usermod -aG <GROUP_NAME> <NEW_USER>
암호정책의 장점: 보완이 강력해진다. 단점: 비밀번호를 자주 까먹을 수도 있고 실제로 보안이 많이 향상되는 것은 dongmiki. ->. d0ngMiki 이런식의 변화를 원한 것이여서 우리가 바꾸는 대부분의 방식들은 크게 효율이 뛰어나지는 않은 한계가 있다.
암호 정책의 장점 사이트
https://www.sedaily.com/NewsView/263I5TGRSX

🟪
이름 확인: hostnamectl
이름 변경: sudo hostnamectl set-hostname <HOST_NAME>    -> sudo reboot
파티션 확인: lsblk
	->root: 루트 저장공간으로 /usr, /tmp, /var등이 있다.
	swap: RAM 메모리가 부족할 경우 끌어 올라가서 사용 하는 것.
	home: 사용자의 홈 디렉터리 및 데이타가 위치하는 파티션이다.
	var: 변경이 가능한 프로그램
	srv: 변경이 불가능한 프로그램
	tmp: 컴퓨터 사용시 들어가는 임시 생성 파일들
	var--log: var프로그램 사용시 로그
 LVM은 Logical Volume Manage로 논리 볼륨 관리자 이다. 실제 하드디스크의 공간을 논리적 공간으로 옮겨서 사용하는 것.
여러개의 하드디스크 공간을 합쳐서 하나의 디스크처럼 사용할 수 있고 기존에 사용중인 디스크의 공간을 자유롭게 확장할 수 있다. 또한 partitions의 애매한 공간을 활용할 수 있다.
LVM의 단위
물리적 볼륨 / PV (Physical Volume)
	- 실제 디스크 장치를 분할한 파티션된 상태를의미한다.
	- PV는 일정한 크기의 PE들로 구성된다.
물리적 확장 / PE (Physical Extent)
	- PV를 구성하는 일정한 크기의 Block.
	- 보통 1PE는 4MB에 해당한다.
	- PE와 LE는 1:1로 대응한다.
볼륨 그룹 / VG (Volume Group)
	- PV들이 모여서 생성되는 단위이다. (모든걸 합친 거대한 지점토 덩어리의 느낌이다)
	- 사용자는 VG를 원하는대로 쪼개서 LV로 만들게 된다.
논리적 볼륨 / LV (Logical Volume)
	- 사용자가 최종적으로 사용하는 단위로, VG에서 필요한 크기로 할당받아 LV를 생성한다.

🟪
sudo 설치확인 -> sudo - - version
sudo에 할당 -> sudo usermod -aG sudo <NEW_USER>
sudo 사용의 장점 : 
	root의 권한을 빌려 사용할 수 있다.
	sudo의 log가 남아 어떤 일을 했는지 알 수 있다. 
	root에서 위험한 command를 하지 않을 수 있다. 
	남에게 보여줄때 sudo를 쓰면 위험에 노출 될 일이 적다.
sudo규칙 설정 sudo visudo
/var/log/sudo/ 폴더에 한개 이상의 파일이 존재하는가 ? → sudo ls /var/log/sudo
sudo 명령어 실행 후 로그파일이 업데이트 되었는가 ? → sudo apt upadate, sudo ls /var/log/sudo/00/00 추가된 파일 확인.

Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
	// 보안을 위해 secure_path(sudo가 사용할 수 있는 경로)를 제한하라
Defaults        passwd_tries=3
	// 일치하지 않는 password인 경우 입력은 3회로 제한하라
Defaults        authfail_message="Authentication faliure!"
	// Authentication 획득 실패 시 출력되는 error 메시지
Defaults        badpass_message="Password is wrong!"
	// password가 일치하지 않는 경우 출력되는 error 메시지
Defaults        iolog_dir="/var/log/sudo"
	// log(input, output)의 저장을 해당 디렉토리에 하라
Defaults        log_input
	// sudo 명령어 실행 시 입력된 명령어를 iolog_dir에 log로 저장하라
Defaults        log_output
	// sudo 명령어 실행 시 출력 결과를 iolog_dir에 log로 저장하라
Defaults        requiretty
	// sudo 명령어가 tty(콘솔, 터미널) 외부(cron)에서 실행되지 않도록하라

🟪
ufw 설치여부 확인 → sudo ufw  - -version
ufw 작동여부 확인 → sudo ufw status
ufw status verbose(기본값 확인)
ufw 설명, 사용하는이유 → 모안 모듈로 방화벽이라고도 하고, 외부 침입자가 내부 network에 침입하는 경우를 막기위해 UFW를 사용한다. 
ufw 추가 sudo ufw allow <Port_NUM>.  /.  제거 sudo delete allow <Port_NUM>

🟪
ssh 포트설정, 루트 권한 -> vim /etc/ssh/sshd_config
ssh 설치여부 확인 → sudo ssh -V
ssh 작동여부 확인 → systemctl status ssh
ssh 사용하는 이유, 설명 → ssh는 원격으로 호스트(Shell)에 접속하기 위해 사용되는 보안 프로토콜이다. 모든 데이터는 암호화가 보장된다. 
SSH는 한쌍의 key (public key 공개키 / private key 개인키)를 이용하여 데이터를 암호화/복호화 하는데 개인키는 클라이언트, 공개키는 호스트가 가지고 있어야 한다. 
SSH 를 사용하는 이유는 역시 보안이 된다는 장점 덕분이다.
터미널에서 ssh <USER_NAME>@localhost -p 4242
루트로 안하는 이유: sudo와 비슷한데 루트로 접속할 경우 어느 사용자가 했는지 로그를 알 수 없다(root로 뜨기 때문)


🟪
cron이란? ->  특정작업을 특정시간에 자동으로 실행시키기 위한 시간기반형 데몬이다. 또한 cron은 crontab이라는 설정 파일을 기반으로 작동한다.
crontab -e
*/10 * * * * /root/monitoring.sh | wall
wall 명령어는 리눅스 시스템에서 사용자의 터미널로 메세지를 보내는 방법 중 하나입니다.
멈추기 → sudo /etc/init.d/cron stop
시작 → sudo /etc/init.d/cron start
reboot시 cron 자동실행 중단 → sudo systemctl disable cron
30초마다 실행 → sudo crontab -e → * * * * * /root/monitoring.sh | wall 한줄, * * * * * sleep 30; 
 *   *   *   *   * /monitoring.sh
분,시,일,월 ,요일

🟪Lighttpd,PHP,mariaDB를 통해서 새로운 웹페이지 연동
systemctl stop lighttpd.service
systemctl start lighttpd.service
systemctl enable lighttpd.service
systemctl status lighttpd

http://localhost:8080/info.php
